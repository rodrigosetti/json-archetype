/**
 * JSON archetype language is a superset of JSON, and can accept C-style
 * comments (block or line) to help documenting your test.
 */

/* one can assign values to names, and use them later to reuse parts.
   This is also an example of a non-trivial use of a regular expression
   to validate an IP address. */
ip_address =  "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
server = { "ip": ip_address,
           "port": 8080,
           "protocol": "http"}

{
    "name": string,
    "version" ?: 2,          // this key is optional (?)
    "data(-.*)?" *: object,  // this key is a regular expression, and may
                             // appear zero or more times
    "is_member"   : boolean, // true or false (type restriction)
    "is_active"   : true,    // only true (value restriction)
    "coordinates" : ["geo", number{3}], // any array with "geo" and 3 numbers
    "stream": [number*],     // a stream is an array of zero or more numbers

    // reusing pre-defined structures. This key should appear three times:
    "[a-z]+_server" {3}: server,

    "state" : [string{2,3}, number+], // 2-3 strings and one or more numbers

    "extra": any // accepts any value here. the key "extra" must exist.
}

